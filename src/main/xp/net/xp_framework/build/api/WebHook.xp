package net.xp_framework.build.api;

import webservices.rest.srv.Response;

[@webservice(path= '/hook')]
public class WebHook {

  /**
   * GitHub passes a JSON string as value for the "payload" form variable
   *
   * @see https://help.github.com/articles/post-receive-hooks
   */
  [@webmethod(verb= 'POST', accepts= 'application/x-www-form-urlencoded'), @$in: param('payload')]
  public Response githubTrigger(io.streams.MemoryInputStream $in) {
    try {
      $payload= new webservices.rest.RestJsonDeserializer().deserialize($in, GitHubPayload::class);
    } catch (FormatException $e) {
      return Response::error(400).withPayload('Malformed payload: ' ~ $e.compoundMessage());
    }

    // Created a tag -> trigger
    if ($payload.created && ($tag= $payload.getTag())) {
      util.cmd.Console::writeLine('Creating release ', $tag, ', started by ', $payload.pusher.name);
      util.cmd.Console::writeLine('-> ', $payload);
    } else {
      util.cmd.Console::writeLine('Ignore ', $payload);      
    }

    return Response::created();
  }
}