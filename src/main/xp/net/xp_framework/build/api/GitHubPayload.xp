package net.xp_framework.build.api;

public class GitHubPayload {
  private static var $tag= new text.regex.Pattern('refs/tags/(.+)');

  public GitHubUserReference $pusher;
  public string $before;
  public string $after;
  public GitHubRepository $repository;
  public peer.URL $compare;
  public string $ref;
  public bool $forced;
  public bool $deleted;
  public bool $created;
  public GitHubCommit[] $commits;
  public GitHubCommit $head_commit;

  /**
   * Returns whether a tag is referenced
   *
   */
  public bool isTag() {
    return self::$tag.matches($this.ref);
  }

  /**
   * Gets tag. Returns NULL if no tag exists
   *
   */
  public bool getTag() {
    $m= self::$tag.match($this.ref);
    return $m.length() ? $m.group(0)[1] : null;
  }

  /**
   * Creates a string representation
   *
   */
  public string toString() {
    return $this.getClassName() ~ '(' ~ $this.before ~ ' -> ' ~ $this.after ~ ' by ' ~ $this.pusher.name ~ ") {\n" ~
      '  [created]    ' ~ ($this.created ? 'yes' : 'no') ~ "\n" ~
      '  [deleted]    ' ~ ($this.deleted ? 'yes' : 'no') ~ "\n" ~
      '  [forced]     ' ~ ($this.forced ? 'yes' : 'no') ~ "\n" ~
      '  [commits]    ' ~ xp::stringOf($this.commits, '  ') ~ "\n" ~
      '  [repository] ' ~ xp::stringOf($this.repository, '  ') ~ "\n" ~
    '}';
  }
}