package net.xp_framework.build;

import util.Date;
import io.streams.InputStream;
import io.streams.TextReader;

import native standard.sscanf;
import native standard.rtrim;

/**
 * Parses markdown changelog from an input stream
 *
 * Example:
 * ```markdown
 * ## ?.?.? / ????-??-??
 * 
 * ### RFCs
 * 
 * * Implemented RFC 273: ChangeLog formatting - (@thekid)
 * 
 * ## 5.9.2 / 2013-05-16
 * 
 * ### Heads up!
 * 
 * * Deprecated scriptlet.xml.workflow.casters.ToFloat in favor of ToDouble
 *   for the sake of consistency - (@thekid)
 *
 * ...
 * ```
 */
public class MarkdownChangeLogParser implements ChangeLogParser {
  const string SEPARATOR = '## %[0-9?.] / %[0-9?-]';

  /**
   * Parse ChangeLog file
   */
  public ChangeLog parse(InputStream $in) throws IllegalStateException {
    $log= new ChangeLog();
    try ($reader= new TextReader($in, 'utf-8')) {

      // Seek for first separator
      $version= $date= null;
      do {
        if (null === ($l= $reader.readLine())) {
          throw new IllegalStateException('ChangeLog malformed');
        }
      } while (2 !== sscanf($l, self::SEPARATOR, $version, $date));

      // Parse rest of file
      do {
        $release= new Release();
        $release.setVersion('?.?.?' === $version ? null : new Version($version));
        $release.setDate('????-??-??' === $date ? Date::now() : new Date($date));
        $release.setRevision(null);

        // Read notes      
        $notes= '';
        $version= $date= null;
        while (null !== ($l= $reader.readLine())) {
          if (2 === sscanf($l, self::SEPARATOR, $version, $date)) break;
          $notes~= $l ~ "\n";
        }

        $release.setNotes(rtrim($notes, "\r\n"));
        $log.addRelease($release);
      } while (null !== $l);
    }

    return $log;
  }
}