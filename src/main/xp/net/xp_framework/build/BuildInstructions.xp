package net.xp_framework.build;

import io.File;
import io.Folder;

/**
 * Override build defaults via xpbuild.json:
 *
 * <pre>
 *  {
 *    "base"     : "core",
 *    "naming"   : {
 *      "main"     : "xp-rt-{VERSION}.xar",
 *      "test"     : "xp-test-{VERSION}.xar"
 *    },
 *    "finalize" : "XpRelease"
 *  }
 * </pre>
 */
public class BuildInstructions {
  public static self $DEFAULT= new self();
  protected string $base= '.';
  protected [:string] $naming= [:];
  protected string $finalize= null;

  /**
   * Sets base
   */
  public void setBase(string? $base) {
    $this.base= $base;
  }

  /**
   * Returns base
   */
  public string getBase() {
    return $this.base;
  }

  /**
   * Sets naming
   */
  public void setNaming([:string]? $naming) {
    $this.naming= $naming;
  }

  /**
   * Returns naming
   */
  public [:string] getNaming() {
    return $this.naming;
  }

  /**
   * Sets finalize
   */
  public void setFinalize(string? $finalize) {
    $this.finalize= $finalize;
  }

  /**
   * Returns finalize
   */
  public string getFinalize() {
    return $this.finalize;
  }

  /**
   * Base folder
   */
  protected Folder baseOf(Folder $base) {
    return new Folder($base, $this.base);
  }

  /**
   * Returns a file reference
   */
  public File file(Folder $base, string? $name) {
    return new File($this.baseOf($base), $name);
  }

  /**
   * Returns the ChangeLog
   */
  public ChangeLog changeLogIn(Folder $base) {
    return new ChangeLogParser().parse($this.file($base, 'ChangeLog').getInputStream());
  }

  /**
   * Creates a string representation
   */
  public string toString() {
    return $this.getClassName() ~ '@' ~ xp::stringOf([
      base     : $this.base,
      naming   : $this.naming,
      finalize : $this.finalize
    ]);
  }
}